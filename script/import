#!/usr/bin/env node
// Usage: script/import filename.json

/* eslint-disable no-restricted-syntax, no-await-in-loop */

const filename = process.argv[2];
console.log(`Importing ${filename}`);

const fs = require('fs');
const loadModels = require('../dist/models');
const logger = require('probot/lib/logger');

async function doImport() {
  const models = loadModels({ logger });

  const data = JSON.parse(fs.readFileSync(filename));

  const { LegacySubscription, sequelize } = models;

  await LegacySubscription.truncate();

  for (const channelConfiguration of data) {
    if (channelConfiguration.repos) {
      for (const repo of channelConfiguration.repos) {
        await LegacySubscription.create({
          channelSlackId: channelConfiguration.channel,
          // authorSlackId: channelConfiguration.author,
          // workspaceSlackId: channelConfiguration.team,
          repoGitHubId: repo.id,
          ownerGitHubId: repo.owner.id,
          repoName: repo.name,
          ownerName: repo.owner.login,
        });
      }
    }
  }

  sequelize.close();
}

doImport();
